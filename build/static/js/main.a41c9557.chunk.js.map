{"version":3,"sources":["assets/Jock's_FC-min.png","Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Table","songList","sortedSongList","sort","a","b","artist","className","map","entry","index","title","location","App","props","searchInputRef","songs","handleChange","event","searchTerm","currentTarget","value","toLowerCase","filter","includes","setState","state","scrollToTop","current","offsetPosition","offsetTop","window","scrollTo","top","behavior","i","push","id","getRandomInt","React","createRef","max","Math","floor","random","src","logo","alt","type","placeholder","onFocusCapture","this","onChange","ref","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,MAA0B,0C,sBCO1B,SAASA,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,SACvBC,EAAc,YAAOD,GAUzB,OATAC,EAAeC,MAAK,SAACC,EAAEC,GACnB,OAAID,EAAEE,OAASD,EAAEC,QACL,EAERF,EAAEE,OAASD,EAAEC,OACN,EAEJ,KAEH,qBAAKC,UAAU,kBAAf,SACJ,kCACI,gCACA,+BACI,4CACA,wCACA,+CAGJ,uCACCL,QADD,IACCA,OADD,EACCA,EAAgBM,KAAI,SAACC,EAAcC,GAAf,OAA0B,+BAE3C,6BAAKD,EAAME,QACX,6BAAKF,EAAMH,SACX,6BAAKG,EAAMG,aAJyCF,a,IC0CrDG,E,kDAxDX,WAAYC,GAAa,IAAD,uBACpB,cAAMA,IARFC,oBAOgB,IANhBC,MAAe,GAMC,EAkBxBC,aAAe,SAACC,GACZ,IAAMC,EAAaD,EAAME,cAAcC,MAAMC,cACvCrB,EAAW,EAAKe,MAAMO,QAAO,SAACd,GAChC,OAAOA,EAAME,MAAMW,cAAcE,SAASL,IACnCV,EAAMH,OAAOgB,cAAcE,SAASL,IACpCV,EAAMG,SAASU,cAAcE,SAASL,MAEjD,EAAKM,SAAL,2BAAkB,EAAKC,OAAvB,IAA8BzB,eAzBV,EA4CxB0B,YAAc,WACV,GAAmC,MAA/B,EAAKZ,eAAea,QAAiB,CACrC,IACMC,EADkB,EAAKd,eAAea,QAAQE,UACX,GACzCC,OAAOC,SAAS,CACZC,IAAKJ,EACLK,SAAU,aA/ClB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAMA,IACtB,EAAKnB,MAAMoB,KAAK,CACZC,GAAIF,EACJvB,SAAU,iBAAmB,EAAK0B,aAAa,KAC/C3B,MAAO,SAAW,EAAK2B,aAAa,KACpChC,OAAQ,UAAY,EAAKgC,aAAa,OAR1B,OAYpB,EAAKZ,MAAQ,CACTzB,SAAU,EAAKe,OAEnB,EAAKD,eAAiBwB,IAAMC,YAfR,E,gDAJxB,SAAaC,GACT,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,M,oBA+BjD,WACI,OACI,sBAAKlC,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,qBAAKsC,IAAKC,EAAMvC,UAAU,WAAWwC,IAAI,WAE7C,uBAAOC,KAAK,OACLC,YAAY,SACZC,eAAgBC,KAAKxB,YACrByB,SAAUD,KAAKlC,aACfoC,IAAKF,KAAKpC,iBACjB,cAACf,EAAD,CAAOC,SAAUkD,KAAKzB,MAAMzB,kB,GA/C1BsC,IAAMe,WCQTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a41c9557.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Jock's_FC-min.cac6093a.png\";","import React from \"react\";\nimport {Entry} from \"./Entry\";\n\ntype TableProps = {\n    songList: Entry[]\n}\n\nexport default function Table({songList}: TableProps) {\n    let sortedSongList = [...songList]\n    sortedSongList.sort((a,b) => {\n        if (a.artist < b.artist) {\n            return -1;\n        }\n        if (a.artist > b.artist) {\n            return 1;\n        }\n        return 0;\n    })\n    return (<div className=\"table-container\">\n        <table>\n            <thead>\n            <tr>\n                <th>Song Title</th>\n                <th>Artist</th>\n                <th>Location</th>\n            </tr>\n            </thead>\n            <tbody>\n            {sortedSongList?.map((entry: Entry, index) => (<tr key={index}>\n\n                <td>{entry.title}</td>\n                <td>{entry.artist}</td>\n                <td>{entry.location}</td>\n            </tr>))}\n            </tbody>\n        </table>\n    </div>)\n}","import React, {FormEvent} from 'react';\nimport logo from './assets/Jock\\'s_FC-min.png';\nimport './App.scss';\nimport entries from \"./assets/entries.json\"\nimport Table from \"./Table\";\n\nclass App extends React.Component<any, any> {\n    private searchInputRef: React.RefObject<HTMLInputElement>;\n    private songs: any[] = [];\n\n    getRandomInt(max: number) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    constructor(props: any) {\n        super(props);\n\n        for (let i = 0; i < 3000; i++) {\n            this.songs.push({\n                id: i,\n                location: \"Some location \" + this.getRandomInt(100),\n                title: \"Title \" + this.getRandomInt(500),\n                artist: \"Artist \" + this.getRandomInt(200)\n            })\n        }\n\n        this.state = {\n            songList: this.songs\n        }\n        this.searchInputRef = React.createRef();\n    }\n\n    handleChange = (event: FormEvent<HTMLInputElement>) => {\n        const searchTerm = event.currentTarget.value.toLowerCase();\n        const songList = this.songs.filter((entry) => {\n            return entry.title.toLowerCase().includes(searchTerm)\n                || entry.artist.toLowerCase().includes(searchTerm)\n                || entry.location.toLowerCase().includes(searchTerm)\n        })\n        this.setState({...this.state, songList})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                </header>\n                <input type=\"text\"\n                       placeholder=\"Search\"\n                       onFocusCapture={this.scrollToTop}\n                       onChange={this.handleChange}\n                       ref={this.searchInputRef}/>\n                <Table songList={this.state.songList}/>\n            </div>\n        );\n    }\n\n    scrollToTop = () => {\n        if (this.searchInputRef.current != null) {\n            const elementPosition = this.searchInputRef.current.offsetTop\n            const offsetPosition = elementPosition - 20;\n            window.scrollTo({\n                top: offsetPosition,\n                behavior: \"smooth\"\n            })\n        }\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}