{"version":3,"sources":["assets/JocksKaraoke.jpeg","components/Table.tsx","App.tsx","hooks.ts","reportWebVitals.ts","index.tsx"],"names":["Table","songList","className","map","entry","index","title","artist","location","App","searchInputRef","useRef","useState","entries","setSongList","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","filter","toLowerCase","includes","src","logo","alt","type","placeholder","onFocusCapture","current","offsetPosition","offsetTop","window","scrollTo","top","behavior","onChange","event","currentTarget","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"klyIAAe,MAA0B,0C,sBCO1B,SAASA,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,SAC3B,OAAQ,qBAAKC,UAAU,kBAAf,SACJ,kCACI,gCACA,+BACI,4CACA,wCACA,+CAGJ,uCACCD,QADD,IACCA,OADD,EACCA,EAAUE,KAAI,SAACC,EAAcC,GAAf,OACX,+BACI,6BAAKD,EAAME,QACX,6BAAKF,EAAMG,SACX,6BAAKH,EAAMI,aAHNH,aCgCVI,MA5Cf,WACI,IAAMC,EAAoDC,iBAAO,MADtD,EAGqBC,mBAASC,GAH9B,mBAGJZ,EAHI,KAGMa,EAHN,OAIyBF,mBAAS,IAJlC,mBAIJG,EAJI,KAIQC,EAJR,KAKLC,ECVK,SAAqBC,EAAYC,GAAgB,IAAD,EACfP,mBAASM,GADM,mBACpDE,EADoD,KACpCC,EADoC,KAa3D,OAXAC,qBACI,WACI,IAAMC,EAAUC,YAAW,WACvBH,EAAkBH,KACnBC,GACH,OAAO,WACHM,aAAaF,MAGrB,CAACL,EAAOC,IAELC,EDHqBM,CAAYX,EAAY,KAuBpD,OArBAO,qBAAU,WACN,IAAMrB,EAAWY,EAAQc,QAAO,SAACvB,GAC7B,OAAOA,EAAME,MAAMsB,cAAcC,SAASZ,IACnCb,EAAMG,OAAOqB,cAAcC,SAASZ,IACpCb,EAAMI,SAASoB,cAAcC,SAASZ,MAEjDH,EAAYb,KACb,CAACgB,IAeA,sBAAKf,UAAU,MAAf,UACI,wBAAQA,UAAU,iBAAlB,SACI,qBAAK4B,IAAKC,EAAM7B,UAAU,OAAO8B,IAAI,WAEzC,uBAAOC,KAAK,OACLC,YAAY,SACZC,eAlBK,WAChB,GAA8B,MAA1BzB,EAAe0B,QAAiB,CAChC,IACMC,EADkB3B,EAAe0B,QAAQE,UACN,GACzCC,OAAOC,SAAS,CACZC,IAAKJ,EACLK,SAAU,aAaPC,SAAU,SAAAC,GAAK,aAAI5B,EAAa,OAAC4B,QAAD,IAACA,GAAD,UAACA,EAAOC,qBAAR,aAAC,EAAsB3B,MAAMU,gBAC7DkB,IAAKpC,IACZ,cAACV,EAAD,CAAOC,SAAUA,QE/Bd8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.92c65e19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/JocksKaraoke.357ed24c.jpeg\";","import React from \"react\";\nimport {Entry} from \"../Entry\";\n\ntype TableProps = {\n    songList: Entry[]\n}\n\nexport default function Table({songList}: TableProps) {\n    return (<div className=\"table-container\">\n        <table>\n            <thead>\n            <tr>\n                <th>Song Title</th>\n                <th>Artist</th>\n                <th>Location</th>\n            </tr>\n            </thead>\n            <tbody>\n            {songList?.map((entry: Entry, index) => (\n                <tr key={index}>\n                    <td>{entry.title}</td>\n                    <td>{entry.artist}</td>\n                    <td>{entry.location}</td>\n                </tr>))}\n            </tbody>\n        </table>\n    </div>)\n}","import React, {FormEvent, useEffect, useRef, useState} from 'react';\nimport logo from './assets/JocksKaraoke.jpeg';\nimport './App.scss';\nimport entries from \"./assets/entries.json\"\nimport Table from \"./components/Table\";\nimport useDebounce from \"./hooks\";\n\nfunction App() {\n    const searchInputRef: React.RefObject<HTMLInputElement> = useRef(null)\n\n    const [songList, setSongList] = useState(entries);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const debouncedSearchTerm = useDebounce(searchTerm, 300);\n\n    useEffect(() => {\n        const songList = entries.filter((entry) => {\n            return entry.title.toLowerCase().includes(debouncedSearchTerm)\n                || entry.artist.toLowerCase().includes(debouncedSearchTerm)\n                || entry.location.toLowerCase().includes(debouncedSearchTerm)\n        })\n        setSongList(songList);\n    }, [debouncedSearchTerm])\n\n\n    const scrollToTop = () => {\n        if (searchInputRef.current != null) {\n            const elementPosition = searchInputRef.current.offsetTop\n            const offsetPosition = elementPosition - 20;\n            window.scrollTo({\n                top: offsetPosition,\n                behavior: \"smooth\"\n            })\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"logo-container\">\n                <img src={logo} className=\"logo\" alt=\"logo\"/>\n            </header>\n            <input type=\"text\"\n                   placeholder=\"Search\"\n                   onFocusCapture={scrollToTop}\n                   onChange={event => setSearchTerm(event?.currentTarget?.value.toLowerCase())}\n                   ref={searchInputRef}/>\n            <Table songList={songList}/>\n        </div>\n    );\n\n}\n\nexport default App;\n","import {useEffect, useState} from \"react\";\n\nexport default function useDebounce(value: any, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay]\n    );\n    return debouncedValue;\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}